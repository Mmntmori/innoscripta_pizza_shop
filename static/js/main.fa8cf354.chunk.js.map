{"version":3,"sources":["assets/images/pizza-svgrepo-com.svg","assets/images/673887.png","components/Header/Header.js","store/shopReducer.js","components/ShopPage/ShopPage.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","getRandomInt","max","Math","floor","random","initialState","shopList","id","price","title","description","image","cart","count","shopReducer","state","action","type","stateCopy","cartItem","item","flag","forEach","e","push","splice","index","alert","length","map","Cart","props","cartSum","cartElements","i","key","photo","disabled","value","onClick","handleItemCount","deleteFromCart","makeOrder","cleanCart","ShopList","listElements","addToCart","connect","shopPage","dispatch","hanbldeItemCount","App","reducers","combineReducers","store","createStore","window","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa8cf354.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-svgrepo-com.74c0ca41.svg\";","module.exports = __webpack_public_path__ + \"static/media/673887.3ad32b2a.png\";","import React from 'react';\nimport './Header.css';\nimport logo from '../../assets/images/673887.png'\n\n\nfunction Header() {\n    return (\n        <header className='header'>\n            <div className='wrapper'>\n                <div className='header__logo'>\n                    <img src={logo}\n                         alt=\"логотип\"\n                         className='header__logo-img'/>\n                </div>\n                <div className='header__title'>\n                    <h1 className='header__title-text'>Заказ пиццы в СПБ и ЛО</h1>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","const ADD_TO_CART = 'ADD_TO_CART',\n    DELETE_FROM_CART = 'DELETE_FROM_CART',\n    HANDLER_ITEM_COUNT = 'HANDLER_ITEM_COUNT',\n    CLEAN_CART = 'CLEAN_CART',\n    MAKE_ORDER = 'MAKE_ORDER'\n\n//Зафигачил генератор случайных ценников, чтобы не скучно было смотреть на корзину.\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nlet initialState = {\n    shopList: [{\n        id: '1',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: 'https://ericasrecipes-com.exactdn.com/wp-content/uploads/2014/03/Four-Cheese-Shrimp-Scampi-Pizza-5W.jpg?strip=all&lossy=1&resize=700%2C488&ssl=1'\n    }, {\n        id: '2',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: null\n\n    }, {\n        id: '3',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: null\n\n    }, {\n        id: '4',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: 'https://cache.marieclaire.fr/data/photo/w1000_c17/cuisine/47/pizza.jpg'\n\n    }, {\n        id: '5',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: null\n\n    }, {\n        id: '6',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: 'https://hdwallpaper.move.pk/wp-content/uploads/2015/02/hot-pizza.jpg'\n\n    },{\n        id: '7',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: null\n    },{\n        id: '8',\n        price: getRandomInt(1000),\n        title: 'Название пиццы',\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Id at neque facilis quisquam! Quisquam architecto dolor, voluptate assumenda nesciunt reiciendis deleniti! Repellendus odio porro officia, quos ea excepturi deleniti perferendis.',\n        image: 'https://ericasrecipes-com.exactdn.com/wp-content/uploads/2014/03/Four-Cheese-Shrimp-Scampi-Pizza-5W.jpg?strip=all&lossy=1&resize=700%2C488&ssl=1'\n    }],\n    cart: [\n        {\n            id: '6',\n            title: 'Название пиццы',\n            price: getRandomInt(1000),\n            image: 'https://hdwallpaper.move.pk/wp-content/uploads/2015/02/hot-pizza.jpg',\n            count: 1\n        },\n        {\n            id: '5',\n            title: 'Название пиццы',\n            price: getRandomInt(1000),\n            image: 'https://hdwallpaper.move.pk/wp-content/uploads/2015/02/hot-pizza.jpg',\n            count: 3\n        },\n        {\n            id: '2',\n            title: 'Название пиццы',\n            price: getRandomInt(1000),\n            image: 'https://hdwallpaper.move.pk/wp-content/uploads/2015/02/hot-pizza.jpg',\n            count: 6\n        }\n    ]\n}\n\nconst shopReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TO_CART: {\n            //Сразу делаем глубокую копию стейта с нужным нам массивом данных. И формируем объект товара в корзине.\n            let stateCopy = { ...state, cart: [...state.cart] },\n                cartItem = {\n                    id: action.item.id,\n                    title: action.item.title,\n                    image: action.item.image,\n                    count: 1,\n                    price: action.item.price\n                },\n                // Флаг индикатор. Нужен чтобы знать есть ли приходящий товар в корзине или нет\n                flag = false;\n\n            //Проверяем корзину на наличие такого же товара, чтобы \n            stateCopy.cart.forEach((e) => {\n                if (e.id === cartItem.id) {\n                    e.count++\n                    flag = true;\n                }\n            })\n            if (!flag) {\n                stateCopy.cart.push(cartItem);\n            }\n\n            return stateCopy\n        }\n        case DELETE_FROM_CART: {\n            //Простая манипуляция с массивом через splice\n            let stateCopy = { ...state, cart: [...state.cart] }\n\n            stateCopy.cart.splice(action.index, 1)\n\n            return stateCopy\n        }\n        case HANDLER_ITEM_COUNT: {\n            let stateCopy = { ...state, cart: [...state.cart] }\n            if (stateCopy.cart[action.index].count >= 2 || action.count > 0) {\n                stateCopy.cart[action.index].count += action.count;\n            } else {\n                alert('Количество пиццы в заказе должно быть минимум 1 шт. Для удаления позиции из корзины воспользуйтесь кнопкой \"Удалить позицию\"')\n            }\n\n            return stateCopy\n        }\n        case CLEAN_CART: {\n            if (state.cart.length !== 0) {\n                return ({ ...state, cart: [] })\n            } else {\n                alert('Корзина уже пуста')\n                return state\n            }\n        }\n\n        case MAKE_ORDER: {\n            if (state.cart.length !== 0) {\n\n                alert(`Вы сделали заказ из ${state.cart.length} пицц. Вот вот ваш заказ:\n                ${state.cart.map((e) => {\n                    return (\n                        `- Пицца ${e.title} количестве ${e.count} шт.`\n                    )\n                })} \n                    На сервер улетит массив корзины со всеми товарами. Там будут содержаться id, количество, цена.`)\n            } else {\n                alert('Ваша корзина пуста!')\n            }\n            return state\n        }\n\n        default: {\n            return state\n        }\n\n    }\n}\n\nexport const addToCart = (item) => {\n    return ({\n        type: ADD_TO_CART,\n        item: item\n    })\n}\n\nexport const deleteFromCart = (index) => {\n    return ({\n        type: DELETE_FROM_CART,\n        index: index\n    })\n}\n\nexport const hanbldeItemCount = (count, index) => {\n    return ({\n        type: HANDLER_ITEM_COUNT,\n        count: count,\n        index: index\n    })\n}\n\nexport const cleanCart = () => {\n    return ({\n        type: CLEAN_CART\n    })\n}\n\nexport const makeOrder = () => {\n    return ({\n        type: MAKE_ORDER\n    })\n}\n\nexport default shopReducer","import React from 'react';\nimport photo from '../../assets/images/pizza-svgrepo-com.svg'\nimport './ShopPage.css'\nimport { connect } from 'react-redux';\nimport { addToCart, deleteFromCart, hanbldeItemCount, cleanCart, makeOrder } from '../../store/shopReducer'\n\nfunction ShopPage(props) {\n    return (\n        <div className='shop-page'>\n            <div className='wrapper'>\n                <ShopList shopList={props.shopList} addToCart={props.addToCart} />\n                <Cart cart={props.cart} deleteFromCart={props.deleteFromCart} handleItemCount={props.handleItemCount} cleanCart={props.cleanCart} makeOrder={props.makeOrder} />\n            </div>\n        </div>\n    )\n}\n\nfunction Cart(props) {    \n    let cartSum = 0,\n    cartElements = props.cart.map((e, i) => {\n        cartSum += e.price * e.count;\n        return (\n            <div className='cart-item' id={e.id} key={e.id}>\n                <div className='cart-item__image'>\n                    <img src={photo} alt='pizza' />\n                </div>\n                <div className='cart-item__block'>\n                    <div className='cart-item__info'>\n                        <h3 className='cart-item__title'>\n                            {e.title}\n                        </h3>\n                    </div>\n                    <div className='cart-item__controls'>\n                        <div className='cart-item__count'>\n                            <span>\n                                Количество:\n                            </span>\n                            <input disabled value={e.count} className='cart-item__count-input' id='itemCount' type='text' />\n                            <span>шт.</span>\n                        </div>\n                        <div className='cart-item__price'>\n                            <p>\n                                Стоимостью: &nbsp;\n                                {e.price * e.count} рублей\n\n                            </p>\n                        </div>\n                        <button type='button' onClick={() => { props.handleItemCount(-1, i) }}>-</button>\n                        <button type='button' onClick={() => { props.handleItemCount(1, i) }}>+</button>\n                        <button type='button' onClick={() => { props.deleteFromCart(i) }}>Удалить позицию</button>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div className='shop-page__cart cart'>\n            <div className='cart__list'>\n                {cartElements}\n            </div>\n            <div>\n                <p>\n                    Общая сумма заказа: &nbsp;\n                    <b>{cartSum}</b>\n                </p>\n\n            </div>\n            <div className='cart__controls'>\n                <button type='button' onClick={() => { props.makeOrder() }}>Оформить заказ</button>\n                {/* Пока что такой функционал не нужен */}\n                {/* <button type='button'>Посмотреть корзину</button> */}\n                <button type='button' onClick={() => { props.cleanCart() }}>Очистить корзину</button>\n            </div>\n        </div>\n    )\n}\n\nfunction ShopList(props) {\n    let listElements = props.shopList.map((e) => {\n        return (\n            <div className='shop-page__item shop-item' key={e.id} id={e.id}>\n                <div className='shop-item__photo'>\n                    <img src={e.image ? e.image : photo} alt={e.title} />\n                </div>\n                <div className='shop-item__info'>\n                    <h3>\n                        {e.title}\n                    </h3>\n                    <p>\n                        {e.description}\n                    </p>\n                    <p>\n                        Цена: <b>{e.price}</b>\n                    </p>\n                </div>\n                <div className='shop-item__controls'>\n                    <div className='cart-item__controls'>\n                        {/* <div className='cart-item__amount'>\n                            <button type='button'>-</button>\n                            <input placeholder='Количество' type='text' />\n                            <button type='button'>+</button>\n                        </div> */}\n                        <button type='button' onClick={() => { props.addToCart(e) }}>Добавить в корзину</button>\n                    </div>\n                </div>\n            </div>\n        )\n    });\n    return (\n        <div className='shop-page__list'>\n            {listElements}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return ({\n        shopList: state.shopPage.shopList,\n        cart: state.shopPage.cart\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        addToCart: (item) => {\n            dispatch(addToCart(item))\n        },\n        deleteFromCart: (index) => {\n            dispatch(deleteFromCart(index))\n        },\n        handleItemCount: (count, index) => {\n            dispatch(hanbldeItemCount(count, index))\n        },\n        cleanCart: () => {\n            dispatch(cleanCart())\n        },\n        makeOrder: () => {\n            dispatch(makeOrder())\n        }\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport ShopPage from './components/ShopPage/ShopPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <ShopPage/>\n    </div >\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\nimport shopReducer from './shopReducer';\n\n// с заделом на расширение функционала сразу беру комбайнер редьюсеров\nlet reducers = combineReducers({\n    shopPage: shopReducer\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n\nwindow.store = store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}